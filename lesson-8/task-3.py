# Задание 3
# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
# очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class OnlyNumbers(Exception):

    def __init__(self, txt):
        self.txt = txt

    @staticmethod
    def check_element(el):
        try:
            float(el)
            return el
        except ValueError:
            raise OnlyNumbers('элемент не является числом')


result_list = []
while True:
    value = input('Введите элемент списка (stop - закончить ввод): ')
    if value == 'stop':
        break
    try:
        result_list.append(OnlyNumbers.check_element(value))
    except OnlyNumbers as err:
        print(err)

print(result_list)
